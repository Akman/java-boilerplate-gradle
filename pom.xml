<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>ru.akman</groupId>
  <artifactId>java-boilerplate-gradle</artifactId>
  <version>1.0.0-SNAPSHOT</version>

  <scm>
    <developerConnection>
      scm:git:git://github.com/akman/java-boilerplate-gradle
    </developerConnection>
  </scm>

  <properties>
    <applicationVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</applicationVersion>
    <applicationName>launcher</applicationName>
    <applicationFullName>Java Boilerplate Project</applicationFullName>
    <applicationDescription>This project aims to cover best practices for Java application development as a whole. It provides tool recommendations for linting, testing and packaging.</applicationDescription>
    <applicationVendor>Akman</applicationVendor>
    <applicationVendorUrl>https://akman.github.io/</applicationVendorUrl>
    <applicationUrl>https://github.com/akman/java-boilerplate-gradle</applicationUrl>
    <applicationAuthorName>Alexander Kapitman</applicationAuthorName>
    <applicationAuthorEmail>akman.ru@gmail.com</applicationAuthorEmail>
    <applicationAuthorUrl>https://akman.github.io/</applicationAuthorUrl>
    <applicationLicenseFile>LICENSE</applicationLicenseFile>
    <applicationLicenseName>The MIT License</applicationLicenseName>
    <applicationLicenseType>MIT</applicationLicenseType>
    <applicationLicenseUrl>https://www.opensource.org/licenses/mit-license.php</applicationLicenseUrl>
    <applicationInceptionYear>2019</applicationInceptionYear>
    <applicationCopyright>Copyright (C) ${applicationInceptionYear} - ${applicationCurrentYear} ${applicationAuthorName} &lt;${applicationAuthorEmail}&gt;</applicationCopyright>
    <!-- Windows 10 -->
    <platformName>${os.name}</platformName>
    <!-- 10.0 -->
    <platformVersion>${os.version}</platformVersion>
    <!-- amd64 -->
    <platformArch>${os.arch}</platformArch>
    <!-- 2 -->
    <platformCpus>${cpu.count}</platformCpus>
    <!-- AdoptOpenJDK -->
    <jvmVendor>${java.vendor}</jvmVendor>
    <!-- 13.0.2 -->
    <jvmVersion>${java.version}</jvmVersion>
    <!-- 13.0.2+8 -->
    <jvmRuntime>${java.runtime.version}</jvmRuntime>
    <javaVersion>13</javaVersion>
    <javaFxVersion>13</javaFxVersion>
    <defaultEncoding>UTF-8</defaultEncoding>
    <project.build.sourceEncoding>${defaultEncoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${defaultEncoding}</project.reporting.outputEncoding>
  </properties>

  <name>${applicationFullName}</name>
  <description>${applicationDescription}</description>
  <url>${applicationUrl}</url>
  <inceptionYear>${applicationInceptionYear}</inceptionYear>
  <licenses>
    <license>
      <name>${applicationLicenseName} (${applicationLicenseType})</name>
      <url>${applicationLicenseUrl}</url>
      <distribution>repo</distribution>
      <comments>A business-friendly OSS license</comments>
    </license>
  </licenses>
  <organization>
    <name>${applicationVendor}</name>
    <url>${applicationVendorUrl}</url>
  </organization>
  <developers>
    <developer>
      <id>AK</id>
      <name>${applicationAuthorName}</name>
      <url>${applicationAuthorUrl}</url>
      <email>${applicationAuthorEmail}</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <packaging>jar</packaging>

  <dependencies>
    <!-- implementation -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>${javaFxVersion}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>2.13.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.13.0</version>
    </dependency>
    <!-- testImplementation -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>3.2.4</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-vintage-engine</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    -->
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <version>2.5.8</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>1.3-groovy-2.5</version>
      <scope>test</scope>
    </dependency>
    <!--
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>3.14.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>2.2</version>
      <scope>test</scope>
    </dependency>
    -->
  </dependencies>

  <!--
    [B] build-helper-maven-plugin
    [B] maven-antrun-plugin
    [B] maven-assembly-plugin
    [B+R] maven-checkstyle-plugin
    [B] maven-clean-plugin
    [B] maven-compiler-plugin
    [B+R] maven-dependency-plugin
    [B] maven-deploy-plugin
    [B] maven-enforcer-plugin
    [B] maven-install-plugin
    [B] maven-jar-plugin
    - [B] maven-jlink-plugin
    [B+R] maven-javadoc-plugin
    [B+R] maven-pmd-plugin
    [B] maven-release-plugin
    [B] maven-resources-plugin
    [B] maven-site-plugin
    [B] maven-source-plugin
    [B] maven-surefire-plugin
    [B] exec-maven-plugin
    [B] native2ascii-maven-plugin
    [B+R] versions-maven-plugin
    [B+R] spotbugs-maven-plugin
    [B+R] jacoco-maven-plugin
    [B] license-maven-plugin
    [B] javafx-maven-plugin
    [B+R] codenarc-maven-plugin
  -->
  <build>
    <plugins>
      <!-- https://www.mojohaus.org/build-helper-maven-plugin/plugin-info.html -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>timestamp-property</id>
            <goals>
              <goal>timestamp-property</goal>
            </goals>
            <phase>validate</phase>
            <configuration>
              <name>applicationCurrentYear</name>
              <pattern>yyyy</pattern>
              <locale>en</locale>
            </configuration>
          </execution>
          <execution>
            <id>parse-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>cpu-count</id>
            <goals>
              <goal>cpu-count</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <archive>
            <manifest>
              <mainClass>ru.akman.launcher.Launcher</mainClass>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>default-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <configLocation>config/checkstyle/google_checks.xml</configLocation>
          <headerLocation>LICENSE</headerLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <consoleOutput>true</consoleOutput>
          <failsOnError>false</failsOnError>
          <failOnViolation>false</failOnViolation>
          <maxAllowedViolations>0</maxAllowedViolations>
          <logViolationsToConsole>true</logViolationsToConsole>
        </configuration>
        <executions>
          <execution>
            <id>default-checkstyle</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>log</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <release>${javaVersion}</release>
        </configuration>        
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.6.3</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
      <!--
      <plugin>
        <artifactId>maven-jlink-plugin</artifactId>
        <version>3.0.0-alpha-1</version>
        <extensions>true</extensions>
      </plugin>      
      -->
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <analysisCache>true</analysisCache>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
          <minimumTokens>100</minimumTokens>
          <maxAllowedViolations>0</maxAllowedViolations>
          <includeTests>true</includeTests>
          <rulesets>
            <ruleset>/category/java/errorprone.xml</ruleset>
            <ruleset>/category/java/bestpractices.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <id>default-pmd</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- https://habr.com/ru/post/130936/ -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M1</version>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
        </configuration>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <filters>
                <filter>target/generated-resources/filters/filter.properties</filter>
              </filters>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <excludes>
                    <exclude>filters/</exclude>
                    <exclude>filtered/</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>src/main/resources/filtered</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>default-testResources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
            <configuration>
              <filters>
                <filter>
                  target/generated-test-resources/filters/filter.properties
                </filter>
              </filters>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <excludes>
                    <exclude>filters/</exclude>
                    <exclude>filtered/</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>src/test/resources/filtered</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.9.0</version>
        <configuration>
          <locales>en,fr</locales>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M4</version>
        <configuration>
          <argLine>
            -Dfile.encoding=${project.build.sourceEncoding} @{argLine}
          </argLine>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <mainClass>ru.akman.launcher.Launcher</mainClass>
          <commandlineArgs>--no-gui</commandlineArgs>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native2ascii-maven-plugin</artifactId>
        <version>2.0.1</version>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <srcDir>src/main/resources/filters</srcDir>
              <targetDir>target/generated-resources/filters</targetDir>
              <includes>
                <include>**/*.properties</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>default-testResources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
            <configuration>
              <srcDir>src/test/resources/filters</srcDir>
              <targetDir>target/generated-test-resources/filters</targetDir>
              <includes>
                <include>**/*.properties</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
      </plugin>
      <!-- https://spotbugs.github.io/spotbugs-maven-plugin/usage.html -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.0.0</version>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>4.0.2</version>
          </dependency>
        </dependencies>
        <configuration>
          <failOnError>false</failOnError>
          <effort>max</effort>
        </configuration>
        <executions>
          <execution>
            <id>default-spotbugs</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
      <!-- mvn help:describe -Dplugin=org.jacoco:jacoco-maven-plugin -Ddetail -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <executions>
          <execution>
            <id>default-jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- http://mycila.mathieu.photography/license-maven-plugin/reports/3.0/check-mojo.html -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
          <header>config/license/LICENSE</header>
          <strictCheck>true</strictCheck>
          <skipExistingHeaders>false</skipExistingHeaders>
          <failIfMissing>false</failIfMissing>
          <failIfUnknown>true</failIfUnknown>
          <properties>
            <name>${applicationFullName}</name>
            <url>${applicationUrl}</url>
            <licenseName>${applicationLicenseName}</licenseName>
            <licenseType>${applicationLicenseType}</licenseType>
            <copyright>${applicationCopyright}</copyright>
          </properties>
          <mapping>
            <fxml>XML_STYLE</fxml>
          </mapping>
          <includes>
            <include>src/**/*</include>
          </includes>
          <excludes>
            <exclude>**/resources/**/*.properties</exclude>
            <exclude>**/resources/**/log4j*.xml</exclude>
            <exclude>**/resources/**/*.png</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>default-license</id>
            <phase>initialize</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- https://github.com/openjfx/javafx-maven-plugin -->
      <!-- mvn help:describe -DgroupId=org.openjfx -DartifactId=javafx-maven-plugin -Ddetail=true -->
      <plugin>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-maven-plugin</artifactId>
        <version>0.0.4</version>
        <configuration>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <release>${javaVersion}</release>
          <mainClass>ru.akman.launcher/ru.akman.launcher.Launcher</mainClass>
          <stripDebug>true</stripDebug>
          <compress>2</compress>
          <noHeaderFiles>true</noHeaderFiles>
          <noManPages>true</noManPages>
          <launcher>launcher</launcher>
        </configuration>
        <executions>
          <execution>
            <id>utf8</id>
            <configuration>
              <options>
                <option>-Dfile.encoding=UTF-8</option>
              </options>
              <commandlineArgs>--no-gui</commandlineArgs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>codenarc-maven-plugin</artifactId>
        <version>0.22-1</version>
      </plugin>
    </plugins>
  </build>

  <!--
    [B+R] maven-checkstyle-plugin
    [B+R] maven-dependency-plugin
    [B+R] maven-javadoc-plugin
    [R] maven-jxr-plugin
    [B+R] maven-pmd-plugin
    [R] maven-project-info-reports-plugin
    [B+R] versions-maven-plugin
    [B+R] spotbugs-maven-plugin
    [B+R] jacoco-maven-plugin
    [B+R] codenarc-maven-plugin
  -->
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.1.1</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.1.2</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>analyze-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.13.0</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
        </reportSets>
        <configuration>
          <linkXRef>true</linkXRef>
          <analysisCache>true</analysisCache>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
          <minimumTokens>100</minimumTokens>
          <maxAllowedViolations>0</maxAllowedViolations>
          <includeTests>true</includeTests>
          <rulesets>
            <ruleset>/category/java/errorprone.xml</ruleset>
            <ruleset>/category/java/bestpractices.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>3.0.0</version>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>2.7</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.0.0</version>
        <configuration>
          <failOnError>false</failOnError>
          <effort>max</effort>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.5</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>codenarc-maven-plugin</artifactId>
        <version>0.22-1</version>
      </plugin>
    </plugins>
  </reporting>

</project>
