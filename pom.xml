<?xml version="1.0" encoding="UTF-8"?>
<!--
  Java Boilerplate Project

  https://github.com/akman/java-boilerplate-gradle

  MIT License (MIT)

  Copyright (C) 2019 - 2020 Alexander Kapitman <akman.ru@gmail.com>

  Permission is hereby granted, free of charge, to any person obtaining
  a copy of this software and associated documentation files (the "Software"),
  to deal in the Software without restriction, including without limitation
  the rights to use, copy, modify, merge, publish, distribute, sublicense,
  and/or sell copies of the Software, and to permit persons to whom
  the Software is furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included
  in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFINGEMENT. IN NO EVENT SHALL
  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  DEALINGS IN THE SOFTWARE.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>ru.akman</groupId>
  <artifactId>java-boilerplate</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <packaging>jar</packaging>

  <scm>
    <connection>scm:git:git://github.com/akman/java-boilerplate-gradle</connection>
    <developerConnection>scm:git:ssh://git@github.com:akman/java-boilerplate-gradle</developerConnection>
    <url>https://github.com/akman/java-boilerplate-gradle</url>
  </scm>

  <issueManagement>
    <system>GitHub</system>
    <url>https://github.com/akman/java-boilerplate-gradle/issues</url>
  </issueManagement>

  <properties>
    <applicationVersion>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</applicationVersion>
    <applicationName>launcher</applicationName>
    <applicationFullName>Java Boilerplate Project</applicationFullName>
    <applicationDescription>This project aims to cover best practices for Java application development as a whole. It provides tool recommendations for linting, testing and packaging.</applicationDescription>
    <applicationVendor>Akman</applicationVendor>
    <applicationVendorUrl>https://akman.github.io/</applicationVendorUrl>
    <applicationUrl>https://github.com/akman/java-boilerplate-gradle</applicationUrl>
    <applicationAuthorNickname>Akman</applicationAuthorNickname>
    <applicationAuthorName>Alexander Kapitman</applicationAuthorName>
    <applicationAuthorEmail>akman.ru@gmail.com</applicationAuthorEmail>
    <applicationAuthorUrl>https://akman.github.io/</applicationAuthorUrl>
    <applicationLicenseFile>LICENSE</applicationLicenseFile>
    <applicationLicenseName>MIT License</applicationLicenseName>
    <applicationLicenseType>MIT</applicationLicenseType>
    <applicationLicenseDistribution>repo</applicationLicenseDistribution>
    <applicationLicenseComment>This is a lax, permissive non-copyleft free software license, compatible with the GNU GPL.</applicationLicenseComment>
    <applicationLicenseUrl>https://spdx.org/licenses/MIT.html</applicationLicenseUrl>
    <applicationInceptionYear>2019</applicationInceptionYear>
    <applicationCurrentYear>2020</applicationCurrentYear>
    <applicationCopyright>Copyright (C) ${applicationInceptionYear} - ${applicationCurrentYear} ${applicationAuthorName} &lt;${applicationAuthorEmail}&gt;</applicationCopyright>

    <applicationModuleName>ru.akman.launcher</applicationModuleName>
    <applicationClassName>ru.akman.launcher.Launcher</applicationClassName>

    <platformName>${os.name}</platformName>
    <platformFamily>${os.family}</platformFamily>
    <platformVersion>${os.version}</platformVersion>
    <platformArch>${os.arch}</platformArch>
    <platformCpus>${cpu.count}</platformCpus>

    <jvmVendor>${java.vendor}</jvmVendor>
    <jvmVersion>${java.version}</jvmVersion>
    <jvmRuntime>${java.runtime.version}</jvmRuntime>

    <mavenVersion>${maven.version}</mavenVersion>
    <javaVersion>13</javaVersion>
    <jdkToolchain>jdk13</jdkToolchain>

    <defaultEncoding>UTF-8</defaultEncoding>
    <project.build.sourceEncoding>${defaultEncoding}</project.build.sourceEncoding>
    <project.reporting.outputEncoding>${defaultEncoding}</project.reporting.outputEncoding>

    <checkstyle.tool.version>8.32</checkstyle.tool.version>
    <spotbugs.tool.version>4.0.2</spotbugs.tool.version>
    <codenarc.tool.version>1.5</codenarc.tool.version>
    
    <junit.version>5.6.2</junit.version>
    <spock.version>2.0-M2-groovy-3.0</spock.version>
    <mockito.version>3.3.3</mockito.version>
    <hamcrest.version>2.2</hamcrest.version>
    <assertj.version>3.16.1</assertj.version>
    
    <javafx.version>13.0.2</javafx.version>
    <slf4j.version>2.0.0-alpha1</slf4j.version>
    <logback.version>1.3.0-alpha4</logback.version>

    <libsDir>${project.build.directory}/libs</libsDir>

  </properties>

  <name>${applicationFullName}</name>
  <description>${applicationDescription}</description>
  <url>${applicationUrl}</url>
  <inceptionYear>${applicationInceptionYear}</inceptionYear>
  <licenses>
    <license>
      <name>${applicationLicenseName} (${applicationLicenseType})</name>
      <url>${applicationLicenseUrl}</url>
      <comments>${applicationLicenseComment}</comments>
      <distribution>${applicationLicenseDistribution}</distribution>
    </license>
  </licenses>
  <organization>
    <name>${applicationVendor}</name>
    <url>${applicationVendorUrl}</url>
  </organization>
  <developers>
    <developer>
      <id>${applicationAuthorNickname}</id>
      <name>${applicationAuthorName}</name>
      <url>${applicationAuthorUrl}</url>
      <email>${applicationAuthorEmail}</email>
      <organization>${applicationVendor}</organization>
      <organizationUrl>${applicationVendorUrl}</organizationUrl>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-base</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-graphics</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-fxml</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-swing</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-web</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-media</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- JUnit -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Spock -->
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <version>${spock.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Mockito -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- Hamcrest -->
    <!--
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>
    -->
    <!-- AssertJ -->
    <!--
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    -->
  </dependencies>

  <!--
    [B] build-helper-maven-plugin (timestamp-property: applicationCurrentYear)
    [B+R] maven-javadoc-plugin (javadoc:test-javadoc,[test-]aggregate,report: all)
    [B+R] maven-checkstyle-plugin (configLocation: google_checks.xml, rule: TodoComment)
    [B+R] maven-pmd-plugin (rulesets: config/pmd/ruleset.xml)
    [B+R] spotbugs-maven-plugin (effort: max, threshold: low, nested: false)
    
    [B+R] codenarc-maven-plugin (report: FAIL)

    ERROR: Invalid argument format: [Boilerplate]. Expression: matcher. Values: matcher = java.util.regex.Matcher[pattern=\-(.*)\=(.*) region=0,11 lastmatch=]
     [java] java.lang.AssertionError: Invalid argument format: [Boilerplate]. Expression: matcher. Values: matcher = java.util.regex.Matcher[pattern=\-(.*)\=(.*) region=0,11 lastmatch=]
     [java]     at org.codehaus.groovy.runtime.InvokerHelper.assertFailed(InvokerHelper.java:388)

    [WARNING] Could not transfer metadata org.codehaus.groovy:groovy-eclipse-batch/maven-metadata.xml from/to codehaus.org (http://repository.codehaus.org): Error transferring file: repository.codehaus.org from http://repository.codehaus.org/org/codehaus/groovy/groovy-eclipse-batch/maven-metadata.xml
    [WARNING] Could not transfer metadata org.codehaus.groovy:groovy-eclipse-batch/maven-metadata.xml from/to codehaus-snapshots (http://nexus.codehaus.org/snapshots/): Error transferring file: nexus.codehaus.org from http://nexus.codehaus.org/snapshots/org/codehaus/groovy/groovy-eclipse-batch/maven-metadata.xml
  -->
  
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-toolchains-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>3.0.0-M1</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.13.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.9.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>
        <plugin>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-report-plugin</artifactId>
          <version>3.0.0-M4</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.6.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>native2ascii-maven-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.gmavenplus</groupId>
          <artifactId>gmavenplus-plugin</artifactId>
          <version>1.9.0</version>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>4.0.0</version>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.8.5</version>
        </plugin>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>codenarc-maven-plugin</artifactId>
          <version>0.22-1</version>
        </plugin>
        <plugin>
          <groupId>ru.akman.maven.plugins</groupId>
          <artifactId>jlink-maven-plugin</artifactId>
          <version>0.1.0-SNAPSHOT</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-toolchains-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <toolchains>
            <jdk>
              <id>${jdkToolchain}</id>
              <!--
              <version>13.0.2</version>
              <vendor>openjdk</vendor>
              -->
            </jdk>
          </toolchains>
        </configuration>
      </plugin>      
      <!-- https://www.mojohaus.org/build-helper-maven-plugin/plugin-info.html -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>cpu-count</goal>
              <goal>parse-version</goal>
              <goal>timestamp-property</goal>
            </goals>
            <configuration>
              <locale>en</locale>
              <name>applicationCurrentYear</name>
              <pattern>yyyy</pattern>
              <unit>year</unit>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <descriptorRefs>
            <descriptorRef>jar-with-dependencies</descriptorRef>
          </descriptorRefs>
          <!-- https://maven.apache.org/shared/maven-archiver/index.html -->
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifest>
              <addDefaultEntries>false</addDefaultEntries>
              <mainClass><!--${applicationModuleName}/-->${applicationClassName}</mainClass>
            </manifest>
            <manifestEntries>
              <Implementation-Title>${applicationModuleName}/${applicationName}</Implementation-Title>
            </manifestEntries>
          </archive>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <outputDirectory>${libsDir}</outputDirectory>
          <!-- http://maven.apache.org/shared/maven-archiver/index.html -->
          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifest>
              <addDefaultEntries>false</addDefaultEntries>
              <mainClass><!--${applicationModuleName}/-->${applicationClassName}</mainClass>
            </manifest>
            <manifestEntries>
              <Implementation-Title>${applicationModuleName}/${applicationName}</Implementation-Title>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.tool.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>config/checkstyle/google_checks.xml</configLocation>
          <headerLocation>LICENSE</headerLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
          <consoleOutput>true</consoleOutput>
          <failsOnError>false</failsOnError>
          <failOnViolation>false</failOnViolation>
          <maxAllowedViolations>0</maxAllowedViolations>
          <logViolationsToConsole>true</logViolationsToConsole>
        </configuration>
        <executions>
          <execution>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <configuration>
          <filesets>
            <fileset>
              <directory>log</directory>
              <followSymlinks>false</followSymlinks>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
          <source>${javaVersion}</source>
          <target>${javaVersion}</target>
          <release>${javaVersion}</release>
          <fork>true</fork>
          <compilerArgs>
            <!--
              Give more detail for unchecked conversion warnings
              that are mandated by the Java Language Specification.
            -->
            <arg>-Xlint:unchecked</arg>
            <!--
              Show a description of each use or override of a deprecated member
              or class. Without this, javac shows a summary of the source files
              that use or override deprecated members or classes.
            -->
            <arg>-Xlint:deprecation</arg>
            <!--
              Terminate compilation if warnings occur.
            -->
            <arg>-Werror</arg>
          </compilerArgs>          
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${libsDir}</outputDirectory>
              <includeScope>runtime</includeScope>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>${mavenVersion}</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-install-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <sourceFileExcludes>
            <sourceFileExclude>**/module-info.java</sourceFileExclude>
          </sourceFileExcludes>
          <additionalOptions>-html5</additionalOptions>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <linkXref>true</linkXref>
          <analysisCache>true</analysisCache>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
          <minimumTokens>50</minimumTokens>
          <maxAllowedViolations>0</maxAllowedViolations>
          <ignoreAnnotations>false</ignoreAnnotations>
          <ignoreIdentifiers>false</ignoreIdentifiers>
          <ignoreLiterals>false</ignoreLiterals>
          <includeTests>true</includeTests>
          <rulesets>config/pmd/ruleset.xml</rulesets>
        </configuration>
        <executions>
          <execution>
            <id>default-pmd</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
              <goal>cpd-check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- https://habr.com/ru/post/130936/ -->
      <plugin>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
        </configuration>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <filters>
                <filter>target/generated-resources/filters/filter.properties</filter>
                <!--filter>src/main/resources/filters/filter.properties</filter-->
              </filters>
              <resources>
                <resource>
                  <directory>src/main/resources</directory>
                  <excludes>
                    <exclude>filters/</exclude>
                    <exclude>filtered/</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>src/main/resources/filtered</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
          <execution>
            <id>default-testResources</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
            <configuration>
              <filters>
                <filter>target/generated-test-resources/filters/filter.properties</filter>
                <!--filter>src/test/resources/filters/filter.properties</filter-->
              </filters>
              <resources>
                <resource>
                  <directory>src/test/resources</directory>
                  <excludes>
                    <exclude>filters/</exclude>
                    <exclude>filtered/</exclude>
                  </excludes>
                </resource>
                <resource>
                  <directory>src/test/resources/filtered</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <configuration>
          <locales>en,fr</locales>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <!-- https://www.mojohaus.org/exec-maven-plugin/java-mojo.html -->
          <execution>
            <id>cli</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>${applicationClassName}</mainClass>
              <commandlineArgs>--debug --no-gui</commandlineArgs>
            </configuration>
          </execution>
          <execution>
            <id>gui</id>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>${applicationClassName}</mainClass>
              <commandlineArgs>--debug</commandlineArgs>
            </configuration>
          </execution>
          <!-- https://www.mojohaus.org/exec-maven-plugin/exec-mojo.html -->
          <execution>
            <id>default-cli</id>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <argument>-Dfile.encoding=${defaultEncoding}</argument>
                <argument>--module-path</argument>
                <modulepath/>
                <argument>--module</argument>
                <argument>${applicationModuleName}/${applicationClassName}</argument>
                <argument>--debug</argument>
                <argument>--no-gui</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- https://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>
            -Dfile.encoding=${defaultEncoding}
            --add-opens ${applicationModuleName}/ru.akman.gui=ALL-UNNAMED
            --add-opens ${applicationModuleName}/ru.akman.launcher=ALL-UNNAMED
            @{argLine}
          </argLine>
          <!--
          <consoleOutputReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5ConsoleOutputReporter">
            <encoding>${defaultEncoding}</encoding>
            <usePhrasedFileName>false</usePhrasedFileName>
          </consoleOutputReporter>
          <statelessTestsetInfoReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoReporter">
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedClassNameInRunning>true</usePhrasedClassNameInRunning>
            <usePhrasedClassNameInTestCaseSummary>true</usePhrasedClassNameInTestCaseSummary>
          </statelessTestsetInfoReporter>          
          <statelessTestsetReporter
              implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
            <version>3.0</version>
            <usePhrasedFileName>false</usePhrasedFileName>
            <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
            <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
            <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
          </statelessTestsetReporter>
          -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>native2ascii-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>resources</goal>
            </goals>
            <configuration>
              <srcDir>src/main/resources/filters</srcDir>
              <targetDir>target/generated-resources/filters</targetDir>
              <includes>
                <include>**/*.properties</include>
              </includes>
            </configuration>
          </execution>
          <execution>
            <id>default-testResources</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>testResources</goal>
            </goals>
            <configuration>
              <srcDir>src/test/resources/filters</srcDir>
              <targetDir>target/generated-test-resources/filters</targetDir>
              <includes>
                <include>**/*.properties</include>
              </includes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <!-- https://spotbugs.github.io/spotbugs-maven-plugin/usage.html -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.tool.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <failOnError>false</failOnError>
          <effort>max</effort>
          <threshold>low</threshold>
          <nested>false</nested>
          <excludeFilterFile>config/spotbugs/excludeFilter.xml</excludeFilterFile>
        </configuration>
        <executions>
          <execution>
            <id>default-spotbugs</id>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- https://www.eclemma.org/jacoco/trunk/doc/maven.html -->
      <!-- mvn help:describe -Dplugin=org.jacoco:jacoco-maven-plugin -Ddetail -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>default-jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>default-jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- http://mycila.mathieu.photography/license-maven-plugin/#supported-comment-types -->
      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <encoding>${defaultEncoding}</encoding>
          <header>config/license/LICENSE</header>
          <strictCheck>true</strictCheck>
          <skipExistingHeaders>false</skipExistingHeaders>
          <failIfMissing>false</failIfMissing>
          <failIfUnknown>false</failIfUnknown>
          <properties>
            <name>${applicationFullName}</name>
            <url>${applicationUrl}</url>
            <licenseName>${applicationLicenseName}</licenseName>
            <licenseType>${applicationLicenseType}</licenseType>
            <copyright>${applicationCopyright}</copyright>
          </properties>
          <headerDefinitions>
            <headerDefinition>config/license/xml_style.xml</headerDefinition>
            <headerDefinition>config/license/javadoc_style.xml</headerDefinition>
          </headerDefinitions>
          <mapping>
            <fxml>XML_STYLE</fxml>
            <groovy>JAVADOC_STYLE</groovy>
          </mapping>
          <includes>
            <include>pom.xml</include>
            <include>src/**/*</include>
          </includes>
          <excludes>
            <exclude>**/resources/**/*.properties</exclude>
            <exclude>**/resources/**/*.png</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <phase>initialize</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>codenarc-maven-plugin</artifactId>
        <configuration>
          <codeNarcVersion>${codenarc.tool.version}</codeNarcVersion>
          <failOnError>false</failOnError>
          <ruleSetFiles>config/codenarc/rules.groovy</ruleSetFiles>
          <maxPriority1Violations>0</maxPriority1Violations>
          <maxPriority2Violations>0</maxPriority2Violations>
          <maxPriority3Violations>0</maxPriority3Violations>
        </configuration>
      </plugin>
      <!-- https://github.com/groovy/GMavenPlus/wiki -->
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>compileTests</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>checkstyle</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>analyze-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!--
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      -->
      <plugin>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>pmd</report>
              <report>cpd</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <artifactId>maven-project-info-reports-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <reportSets>
          <reportSet>
            <reports>
              <report>report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>
      <!--
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>codenarc-maven-plugin</artifactId>
      </plugin>
      -->
    </plugins>
  </reporting>

</project>
