# if: tag IS blank

matrix:
#  fast_finish: true
  include:
#    - os: linux
#      dist: xenial
#      language: java
#      env:
#        - JPACKAGE_ARCHIVE_NAME=openjdk-13-jpackage+49_linux-x64_bin.tar.gz
#        - JPACKAGE_DOWNLOAD_URL=https://download.java.net/java/early_access/jpackage/49/$JPACKAGE_ARCHIVE_NAME
#        - BADASS_JLINK_JPACKAGE_HOME=/home/travis/build/Akman/java-boilerplate-gradle/jdk-13
#      jdk:
#        - openjdk11
#    - os: osx
#      osx_image: xcode10.1
#      language: java
#      env:
#        - JPACKAGE_ARCHIVE_NAME=openjdk-13-jpackage+49_osx-x64_bin.tar.gz
#        - JPACKAGE_DOWNLOAD_URL=https://download.java.net/java/early_access/jpackage/49/$JPACKAGE_ARCHIVE_NAME
#        - BADASS_JLINK_JPACKAGE_HOME=/Users/travis/build/Akman/java-boilerplate-gradle/jdk-13.jdk/Contents/Home
#      jdk:
#        - openjdk11
    - os: windows
      language: bash
      env:
        - JPACKAGE_ARCHIVE_NAME=openjdk-13-jpackage+49_windows-x64_bin.zip
        - JPACKAGE_DOWNLOAD_URL=https://download.java.net/java/early_access/jpackage/49/$JPACKAGE_ARCHIVE_NAME
        - BADASS_JLINK_JPACKAGE_HOME=/c/Users/travis/build/Akman/java-boilerplate-gradle/jdk-13

sudo: false

#install: true

git:
    depth: false

before_install:
  - chmod a+x .ci/build.sh
  - chmod a+x ./gradlew

install:
  - sh .ci/build.sh

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/

# before_script:
#   - if [ -n "${TRAVIS_TAG}" -a "${TRAVIS_OS_NAME}" = "osx" ]; then
#     openssl aes-256-cbc -k "$ENC_SECRET" -in app/assets/osx/codesign.cer.enc -out app/assets/osx/codesign.cer -d;
#     openssl aes-256-cbc -k "$ENC_SECRET" -in app/assets/osx/codesign.p12.enc -out app/assets/osx/codesign.p12 -d;
#     fi

script:
  - if [ -f ~/.profile ]; then
      . ~/.profile;
    fi
  - echo $JAVA_HOME
  - echo $PATH
  - ./gradlew clean check jacocoTestReport
  - ./gradlew --info --stacktrace jpackage

after_success:
  - bash <(curl -s https://codecov.io/bash)

# env:
#   global:
#     - secure: "MZhh ... NtQ="
#     - secure: "d2jv ... VGQ="

# deploy:
#   provider: pages
#   skip-cleanup: true
#   github-token: $GITHUB_TOKEN
#   keep-history: false
#   target-branch: images
#   local-dir: build/image-zip
#   on:
#     branch: master

#   provider: s3
#   access_key_id: $AWS_ACCESS_KEY_ID
#   secret_access_key: $AWS_SECRET_ACCESS_KEY
#   bucket: "download.gluonhq.com"
#   acl: public_read
#   upload-dir: scenebuilder
#   local-dir: deployment
#   skip_cleanup: true
#   on:
#     tags: true
#     repo: gluonhq/scenebuilder

# after_deploy:
#   - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
#     aws s3 cp --content-type "application/x-rpm" --acl public-read --metadata-directive REPLACE s3://download.gluonhq.com/scenebuilder/$TRAVIS_TAG/install/linux/SceneBuilder-$TRAVIS_TAG.rpm s3://download.gluonhq.com/scenebuilder/$TRAVIS_TAG/install/linux/SceneBuilder-$TRAVIS_TAG.rpm;
#     fi
